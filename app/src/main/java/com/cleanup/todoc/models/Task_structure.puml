@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.cleanup.todoc.models.Task",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_856774308 { 
   	label=cleanup
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1925994771 { 
   	label=todoc
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   DeleteTaskEvent1998625298[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DeleteTaskEvent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   task: Task [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MainActivity592173596[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MainActivity</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   adapter: TasksAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   fragment: MainFragment [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   orderPreference: SharedPreferences [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tasks: List&lt;Task&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateOptionsMenu(menu: Menu): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ onOptionsItemSelected(item: MenuItem): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MainActivityInstrumentedTest1258479462[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MainActivityInstrumentedTest</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   mActivityScenarioRule: ActivityScenarioRule&lt;MainActivity&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAndRemoveTask()</TD></TR>
<TR><TD ALIGN="LEFT" >+ sortTasks()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MainFragment592173596[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MainFragment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   adapter: TasksAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   binding: FragmentMainBinding [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dialog: AlertDialog [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dialogEditText: EditText [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dialogSpinner: Spinner [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mRecyclerView: RecyclerView [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mViewModel: MainFragmentViewModel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   mainFragmentViewModel: MainFragmentViewModel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   projectDataRepository: ProjectDataRepository [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   taskDataRepository: TaskDataRepository [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tasks: List&lt;Task&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- configureViewModel()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initRecyclerview()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onActivityCreated(savedInstanceState: Bundle)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateView(inflater: LayoutInflater, container: ViewGroup, savedInstanceState: Bundle): View</TD></TR>
<TR><TD ALIGN="LEFT" >+ onDeleteTask(event: DeleteTaskEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onPositiveButtonClick(dialogInterface: DialogInterface)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onResume()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onSharePref(event: SharePrefEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onStart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onStop()</TD></TR>
<TR><TD ALIGN="LEFT" >+ populateDialogSpinner()</TD></TR>
<TR><TD ALIGN="LEFT" >+ showAddTaskDialog()</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateTasks()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Task2050372082[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Task</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   creationTimestamp: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   projectId: long [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TaskDao_Impl1426069251[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TaskDao_Impl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   __db: RoomDatabase [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   __deletionAdapterOfTask: EntityDeletionOrUpdateAdapter&lt;Task&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   __insertionAdapterOfTask: EntityInsertionAdapter&lt;Task&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   __updateAdapterOfTask: EntityDeletionOrUpdateAdapter&lt;Task&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ deleteTask(task: Task)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTaskById(taskId: Long): Task</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertTask(task: Task)</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderAZ(): List&lt;Task&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderByLastToNew(): List&lt;Task&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderByNewToLast(): List&lt;Task&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderZA(): List&lt;Task&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateTask(task: Task)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TaskDataRepository1295645968[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TaskDataRepository</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   taskDao: TaskDao [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTask(task: Task)</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteTask(task: Task)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTask(TaskId: Long): Task</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderAZ(): List&lt;Task&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderByLastToNew(): List&lt;Task&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderByNewToLast(): List&lt;Task&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderZA(): List&lt;Task&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateTask(task: Task)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TaskWithProject1426069251[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TaskWithProject</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   project: Project [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   task: Task [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TasksAdapter592173596[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TasksAdapter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   mViewModel: MainFragmentViewModel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tasks: List&lt;Task&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ onBindViewHolder(taskViewHolder: TaskViewHolder, position: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onCreateViewHolder(viewGroup: ViewGroup, viewType: int): TaskViewHolder</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateTasks(tasks: List&lt;Task&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TestBaseTodoc1258479462[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TestBaseTodoc</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   TASK_DEMO: Task [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   TASK_ID: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   database: TodocDatabase [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   instantTaskExecutorRule: InstantTaskExecutorRule [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   projectTest: Project [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTaskTest()</TD></TR>
<TR><TD ALIGN="LEFT" >+ closeDb()</TD></TR>
<TR><TD ALIGN="LEFT" >+ getProjectTest()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initDb()</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertProjectTest()</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeTaskTest()</TD></TR>
<TR><TD ALIGN="LEFT" >+ test_az_comparator()</TD></TR>
<TR><TD ALIGN="LEFT" >+ test_old_comparator()</TD></TR>
<TR><TD ALIGN="LEFT" >+ test_recent_comparator()</TD></TR>
<TR><TD ALIGN="LEFT" >+ test_za_comparator()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TodocDatabase1426069251[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TodocDatabase</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ daoProject(): ProjectDao</TD></TR>
<TR><TD ALIGN="LEFT" >+ daoTask(): TaskDao</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstance(context: Context): TodocDatabase</TD></TR>
<TR><TD ALIGN="LEFT" >+ prepopulateDatabase(): Callback</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TodocDatabase_Impl1426069251[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TodocDatabase_Impl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   _projectDao: ProjectDao [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   _taskDao: TaskDao [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clearAllTables()</TD></TR>
<TR><TD ALIGN="LEFT" ># createInvalidationTracker(): InvalidationTracker</TD></TR>
<TR><TD ALIGN="LEFT" ># createOpenHelper(config: DatabaseConfiguration): SupportSQLiteOpenHelper</TD></TR>
<TR><TD ALIGN="LEFT" >+ daoProject(): ProjectDao</TD></TR>
<TR><TD ALIGN="LEFT" >+ daoTask(): TaskDao</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAutoMigrations(autoMigrationSpecs: Map&lt;Class&lt;? extends AutoMigrationSpec&gt;, AutoMigrationSpec&gt;): List&lt;Migration&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ViewModelFactory592173596[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ViewModelFactory</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   executor: Executor [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   projectDataRepository: ProjectDataRepository [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   taskDataRepository: TaskDataRepository [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ create(modelClass: Class&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ getInstance(context: Context): ViewModelFactory</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
DeleteTaskEvent1998625298 -> Task2050372082[label="task
[0..1]"];
MainActivity592173596 -> MainFragment592173596[label="fragment
[0..1]"];
MainActivity592173596 -> Task2050372082[label="tasks
[0..*]"];
MainActivity592173596 -> TasksAdapter592173596[label="adapter
[0..1]"];
MainActivityInstrumentedTest1258479462 -> MainActivity592173596[label="mActivityScenarioRule
[0..1]"];
MainFragment592173596 -> Task2050372082[label="tasks
[0..*]"];
MainFragment592173596 -> TaskDataRepository1295645968[label="taskDataRepository
[0..1]"];
MainFragment592173596 -> TasksAdapter592173596[label="adapter
[0..1]"];
TaskDao_Impl1426069251 -> Task2050372082[label="__deletionAdapterOfTask
[0..1]"];
TaskDao_Impl1426069251 -> Task2050372082[label="__insertionAdapterOfTask
[0..1]"];
TaskDao_Impl1426069251 -> Task2050372082[label="__updateAdapterOfTask
[0..1]"];
TaskDataRepository1295645968 -> TaskDao_Impl1426069251[label="taskDao
[0..1]", arrowhead=none];
TaskWithProject1426069251 -> Task2050372082[label="task
[0..1]"];
TasksAdapter592173596 -> Task2050372082[label="tasks
[0..*]"];
TestBaseTodoc1258479462 -> Task2050372082[label="TASK_DEMO
[0..1]"];
TestBaseTodoc1258479462 -> TodocDatabase1426069251[label="database
[0..1]"];
TodocDatabase1426069251 -> TodocDatabase_Impl1426069251[arrowhead=none, arrowtail=empty, dir=both];
TodocDatabase_Impl1426069251 -> TaskDao_Impl1426069251[label="_taskDao
[0..1]", arrowhead=none];
ViewModelFactory592173596 -> TaskDataRepository1295645968[label="taskDataRepository
[0..1]"];
    
}
@enduml